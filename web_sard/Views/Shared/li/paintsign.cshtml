@model Guid
@{
    Layout = null;

  
}




<button type="button" class="btn btn-primary w-100" data-toggle="modal" onclick="setupsign()" data-target="#examplesignModal">
   رسم امضا
</button>
 
    <div class="modal p-0 fade" id="examplesignModal" tabindex="-1" role="dialog" aria-labelledby="examplesignModalLabel" aria-hidden="true">
        <div class="modal-dialog p-0" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="examplesignModalLabel">رسم امضا</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body pr-0 pl-0 bg-gradient-info text-center">
                      <canvas id="canvassign" width=350 height=350></canvas>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary w-25 shadow"  data-dismiss="modal">لغو</button>
                    <button type="submit" class="btn btn-primary w-75 shadow " onclick="submitsign(this);"  >ثبت امضا </button>
                </div>
            </div>
        </div>
    </div>

 



    <script>
    //var img = new Image;
    //img.onload = setup;
    //img.src = "http://i.stack.imgur.com/xL8it.pnggss";
    var canvas = document.getElementById("canvassign");

        function setupsign() {
            var ctx = canvas.getContext("2d"),
                lastPos, isDown = false;

 
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            var w = canvas.width;
            ctx.width = 1;
            ctx.width = w;


       
        ctx.fillStyle = "white";
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        ctx.lineCap = "round";                                   // make lines prettier
        ctx.lineWidth = 4;
        ctx.globalCompositeOperation = "multiply";               // KEY MODE HERE



        canvas.ontouchstart = function (e) {
            isDown = true;
            lastPos = getPost(e);
            ctx.strokeStyle = "hsl(0, 0%, 0%)";
        };
        canvas.ontouchmove = function (e) {
            if (!isDown) return;
            var pos = getPost(e);
            ctx.beginPath();
            ctx.moveTo(lastPos.x, lastPos.y);
            ctx.lineTo(pos.x, pos.y);
            ctx.stroke();
            lastPos = pos;
        };
        canvas.ontouchend = function (e) { isDown = false };











        canvas.onmousedown = function (e) {
            isDown = true;
            lastPos = getPos(e);
            ctx.strokeStyle = "hsl(0, 0%, 0%)";
        };
        window.onmousemove = function (e) {
            if (!isDown) return;
            var pos = getPos(e);
            ctx.beginPath();
            ctx.moveTo(lastPos.x, lastPos.y);
            ctx.lineTo(pos.x, pos.y);
            ctx.stroke();
            lastPos = pos;
        };
        window.onmouseup = function (e) { isDown = false };





        function getPos(e) {
            var rect = canvas.getBoundingClientRect();
            return { x: e.clientX - rect.left, y: e.clientY - rect.top }
        }

        function getPost(e) {
            var rect = canvas.getBoundingClientRect();
            return { x: e.touches[0].clientX - rect.left, y: e.touches[0].clientY - rect.top }
        }

    }

    
    function dataURItoBlob(dataURI) {
        // convert base64/URLEncoded data component to raw binary data held in a string
        var byteString;
        if (dataURI.split(',')[0].indexOf('base64') >= 0)
            byteString = atob(dataURI.split(',')[1]);
        else
            byteString = unescape(dataURI.split(',')[1]);

        // separate out the mime component
        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

        // write the bytes of the string to a typed array
        var ia = new Uint8Array(byteString.length);
        for (var i = 0; i < byteString.length; i++) {
            ia[i] = byteString.charCodeAt(i);
        }

        return new Blob([ia], { type: mimeString });
    }
    function submitsign(t) {
        var dataURL = dataURItoBlob( canvas.toDataURL('image/jpeg'));
        $(t).append("<span class='spinner-grow spinner-grow-sm' role='status' aria-hidden='true'></span>");
        $(t).addClass("disabled");

        var formData = new FormData();
        formData.append("image", dataURL);
        formData.append("idp", "@Model");
        formData.append("kind", "Sign");
        var request = new XMLHttpRequest();
        request.open("POST", "@Url.Action("addDoc","YARD" )",true);
        request.onload = function (oEvent) {
             if (request.status == 200) {
                 document.location.reload();
               } else {
                 $(t).remove($(t).find("span"));
                 $(t).removeClass("disabled");
                   alert("ثبت انجام نشد");
            }
        };
        request.send(formData);


    }

    </script>