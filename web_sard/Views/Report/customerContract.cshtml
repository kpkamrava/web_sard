@model IEnumerable<web_sard.Models.tbls.contract.contract>

@{
    ViewData["Title"] = "لیست قراردادهای " + @ViewBag.cus;
    var ContractType = (web_db.TblContractType)ViewBag.ctype;

}

<h1>لیست قراردادهای @ViewBag.cus</h1>

 
@if (ContractType.KindCotractType == web_db.TblContractType.KindCotractTypeEnum.ASardKhane)
{
    <table class="table table-striped table-responsive">
        <thead>
            <tr>
                <th>
                    <i class="	fa fa-sort-numeric-down"></i>
                </th>
                <th>
                    <i class="	fa fa-sort-numeric-down"></i>
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Custumer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ContractType)
                </th>
               
                    
                        <th>
                            @Html.DisplayNameFor(model => model.WeightMaxIn)
                        </th>
                  
                        <th>
                            @Html.DisplayNameFor(model => model.WeightMaxOut)
                        </th>

                     
               
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>


                <th>
                    @Html.DisplayNameFor(model => model.Txt)
                </th>

                <th>
                    جمع ورودی
                </th>
                <th>
                    جمع خروجی
                </th>
                <th>
                    مانده ورودی
                </th>
                <th>
                    مانده خروجی
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @{ int i = 1;}
            @foreach (var item in Model)
            {
                <tr @(item.Txt.IsEmpty() == false ? "class=table-warning" : "")>
                    <td>
                        @i  @{i++; }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Custumer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ContractType.Title)

                    </td>
                
                            <td>
                                @item.WeightMaxIn.GetValueOrDefault().ToKilo()
                            </td>

                       
                        
                       
                            <td>
                                @if (item.PercentForOut.HasValue)
                                {
                                    @item.PercentForOut <span>%</span>
                                }
                                else
                                {
                                    @item.WeightMaxOut.GetValueOrDefault().ToKilo()


                                }
                            </td>

                       

                    <td>
                        @item.Date.ToPersianDate()
                    </td>


                    <td>
                        @Html.Raw(item.Txt)
                        @Html.Raw(string.Join("", item.prodocts.Select(a => " <span class='badge bg-info'>" + a.title + "</span> ").ToArray()))
                        @Html.Raw(string.Join("", item.packings.Select(a => " <span class='badge bg-info'>" + a.title + "</span> ").ToArray()))

                    </td>


                    <td>
                       <span class="badge bg-info ">@item._WeightIn.ToKilo()</span>
                    

                        <span class="badge bg-primary ">@item._CountIn</span>

                    </td>
                    <td>
                       <span class="badge bg-info ">@item._WeightOut.ToKilo()</span>
                    

                        <span class="badge bg-primary ">@item._CountOut</span>

                    </td>

                    <td>
                        <span class="badge bg-info @(item._WeightForInMande < 0 ? "bg-danger" : "")">@item._WeightForInMande.ToKilo()</span>
                   

                        <span class="badge bg-primary @(item._CountForInMande < 0 ? "bg-danger" : "")">@item._CountForInMande</span>

                    <td>
                       <span class="badge bg-info  @(item._WeightForOutMande < 0 ? "bg-danger" : "")">@item._WeightForOutMande.ToKilo()</span>
                   

                        <span class="badge bg-primary @(item._CountForOutMande < 0 ? "bg-danger" : "")">@item._CountForOutMande</span>

                    </td>
                    <td>
                        <a asp-action="CustomerContractGardeshGr" asp-controller="Report" isModal="true" asp-route-id="@item.Id" class="btn btn-sm btn-light fa fa-list"></a>
                        <a asp-action="Create" asp-controller="contract" isModal="true" asp-route-id="@item.Id" class="btn btn-sm btn-warning fa fa-edit"></a>
                        <a asp-action="Delete" asp-controller="contract" onclick="return confirm('آیا مطمئن هستید؟')" class="btn btn-sm btn-danger fa fa-recycle"></a>
                    </td>

                </tr>
                            }
        </tbody>
        <tfoot>
            <tr>
                <th colspan="3">جمع:</th>

               
                   
                        <th>
                            @Model.Sum(a => a.WeightMaxIn).GetValueOrDefault().ToString("###0.##")
                        </th>

                    
                        <th>
                            @Model.Sum(a => a.WeightMaxOut).GetValueOrDefault().ToString("###0.##")
                        </th>

                    
                }

                <th colspan="3"></th>



                <th>
                  <span class="badge bg-info">@Model.Sum(a => a._WeightIn).ToKilo()</span>
                

                    <span class="badge bg-primary">@Model.Sum(a => a._CountIn)</span>

                </th>
                <th>
                   <span class="badge bg-info">@Model.Sum(a => a._WeightOut).ToKilo()</span>
                 

                    <span class="badge bg-primary">@Model.Sum(a => a._CountOut)</span>

                </th>

                <th>
                   <span class="badge bg-info">@Model.Sum(a => a._WeightForInMande).ToKilo()</span>
                

                    <span class="badge bg-primary">@Model.Sum(a => a._CountForInMande)</span>

                <th>
                    <span class="badge bg-info">@Model.Sum(a => a._WeightForOutMande).ToKilo()</span>
              

                    <span class="badge bg-primary">@Model.Sum(a => a._CountForOutMande)</span>

                </th>

                <th>  </th>
            </tr>
        </tfoot>
    </table>

  }
   else if (ContractType.KindCotractType == web_db.TblContractType.KindCotractTypeEnum.ASabad)
   {
   var conf = ContractType.ConfigASabad();












    <table class="table table-striped table-responsive">
        <thead>
            <tr>
                <th>
                    <i class="	fa fa-sort-numeric-down"></i>
                </th>
                <th>
                    <i class="	fa fa-sort-numeric-down"></i>
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Custumer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ContractType)
                </th>
                @if (conf.IsEntry)
                {
                   
                        <th>
                            @Html.DisplayNameFor(model => model.CountMaxIn)
                        </th>
                    
                }
                @if (conf.IsExit)
                {
                    
                        <th>
                            @Html.DisplayNameFor(model => model.CountMaxOut)
                        </th>
                    
                }
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>


                <th>
                    @Html.DisplayNameFor(model => model.Txt)
                </th>

                <th>
                    جمع ورودی
                </th>
                <th>
                    جمع خروجی
                </th>
                <th>
                    مانده ورودی
                </th>
                <th>
                    مانده خروجی
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @{ int i = 1;}
            @foreach (var item in Model)
            {
                <tr @(item.Txt.IsEmpty() == false ? "class=table-warning" : "")>
                    <td>
                        @i  @{i++; }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Custumer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ContractType.Title)

                    </td>
                    @if (conf.IsEntry)
                    {
                       
                            <td>
                                @Html.DisplayFor(modelItem => item.CountMaxIn)
                            </td>
                        
                    }
                    @if (conf.IsExit)
                    {
                      
                            <td>
                                @Html.DisplayFor(modelItem => item.CountMaxOut)
                            </td>
                        
                    }

                    <td>
                        @item.Date.ToPersianDate()
                    </td>


                    <td>
                        @Html.Raw(item.Txt)
                        @Html.Raw(string.Join("", item.prodocts.Select(a => " <span class='badge bg-info'>" + a.title + "</span> ").ToArray()))
                        @Html.Raw(string.Join("", item.packings.Select(a => " <span class='badge bg-info'>" + a.title + "</span> ").ToArray()))

                    </td>


                    <td>
                         

                        <span class="badge bg-primary ">@item._CountIn</span>

                    </td>
                    <td>
                       

                        <span class="badge bg-primary ">@item._CountOut</span>

                    </td>

                    <td>
                        

                        <span class="badge bg-primary @(item._CountForInMande < 0 ? "bg-danger" : "")">@item._CountForInMande</span>

                    <td>
                        

                        <span class="badge bg-primary @(item._CountForOutMande < 0 ? "bg-danger" : "")">@item._CountForOutMande</span>

                    </td>
                    <td>
                        <a asp-action="CustomerContractGardeshGr" asp-controller="Report" isModal="true" asp-route-id="@item.Id" class="btn btn-sm btn-light fa fa-list"></a>
                        <a asp-action="Create" asp-controller="contract" isModal="true" asp-route-id="@item.Id" class="btn btn-sm btn-warning fa fa-edit"></a>
                        <a asp-action="Delete" asp-controller="contract" onclick="return confirm('آیا مطمئن هستید؟')" class="btn btn-sm btn-danger fa fa-recycle"></a>
                    </td>

                </tr>
                            }
        </tbody>
        <tfoot>
            <tr>
                <th colspan="3">جمع:</th>

                @if (conf.IsEntry)
                {
                    
                        <th>
                            @Model.Sum(a => a.CountMaxIn)
                        </th>
                   
                }
                @if (conf.IsExit)
                {
                   
                        <th>
                            @Model.Sum(a => a.CountMaxOut)
                        </th>
                    
                }

                <th colspan="3"></th>



                <th>
                    

                    <span class="badge bg-primary">@Model.Sum(a => a._CountIn)</span>

                </th>
                <th> 
                    <span class="badge bg-primary">@Model.Sum(a => a._CountOut)</span>

                </th>

                <th>
                   

                    <span class="badge bg-primary">@Model.Sum(a => a._CountForInMande)</span>

                <th>
                    

                    <span class="badge bg-primary">@Model.Sum(a => a._CountForOutMande)</span>

                </th>

                <th>  </th>
            </tr>
        </tfoot>
    </table>


                            }

                         