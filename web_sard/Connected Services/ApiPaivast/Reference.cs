//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiPaivast
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApiPaivast.AccountingServiceSoap")]
    internal interface AccountingServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddLegalCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> AddLegalCustomerAsync(
                    int fiscalPeriod, 
                    string name, 
                    string title, 
                    string nationalIdentiry, 
                    string phone, 
                    string fax, 
                    string cellPhone, 
                    string management, 
                    string registerationNumber, 
                    int registrationLocation, 
                    System.DateTime registrationDate, 
                    string subscriptionCode, 
                    string zipCode, 
                    string econumicCode, 
                    double credit, 
                    string email, 
                    string address, 
                    string description, 
                    string parentAccountId, 
                    string parentFloatingAccountId, 
                    int type, 
                    string floatingAccountId2, 
                    string floatingAccountId3, 
                    string floatingAccountId4, 
                    string floatingAccountId5, 
                    string userName, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddRealCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> AddRealCustomerAsync(
                    int fiscalPeriod, 
                    string firstName, 
                    string lastName, 
                    string title, 
                    string nationalCode, 
                    string phone, 
                    string fax, 
                    string cellPhone, 
                    string fatherName, 
                    string registerationNumber, 
                    int registrationLocation, 
                    System.DateTime registrationDate, 
                    string subscriptionCode, 
                    string zipCode, 
                    string econumicCode, 
                    double credit, 
                    string email, 
                    string address, 
                    string description, 
                    string parentAccountId, 
                    string parentFloatingAccountId, 
                    int type, 
                    string floatingAccountId2, 
                    string floatingAccountId3, 
                    string floatingAccountId4, 
                    string floatingAccountId5, 
                    string userName, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddLegalCustomerWithSpecificFloatingAccountCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> AddLegalCustomerWithSpecificFloatingAccountCodeAsync(
                    int fiscalPeriod, 
                    string name, 
                    string title, 
                    string nationalIdentiry, 
                    string phone, 
                    string fax, 
                    string cellPhone, 
                    string management, 
                    string registerationNumber, 
                    int registrationLocation, 
                    System.DateTime registrationDate, 
                    string subscriptionCode, 
                    string zipCode, 
                    string econumicCode, 
                    double credit, 
                    string email, 
                    string address, 
                    string description, 
                    string parentAccountId, 
                    string parentFloatingAccountCode, 
                    string floatingAccountCode, 
                    int type, 
                    string floatingAccountId2, 
                    string floatingAccountId3, 
                    string floatingAccountId4, 
                    string floatingAccountId5, 
                    string userName, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddRealCustomerWithSpecificFloatingAccountCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> AddRealCustomerWithSpecificFloatingAccountCodeAsync(
                    int fiscalPeriod, 
                    string firstName, 
                    string lastName, 
                    string title, 
                    string nationalCode, 
                    string phone, 
                    string fax, 
                    string cellPhone, 
                    string fatherName, 
                    string registerationNumber, 
                    int registrationLocation, 
                    System.DateTime registrationDate, 
                    string subscriptionCode, 
                    string zipCode, 
                    string econumicCode, 
                    double credit, 
                    string email, 
                    string address, 
                    string description, 
                    string parentAccountId, 
                    string parentFloatingAccountCode, 
                    string floatingAccountCode, 
                    int type, 
                    string floatingAccountId2, 
                    string floatingAccountId3, 
                    string floatingAccountId4, 
                    string floatingAccountId5, 
                    string userName, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerIdByAccountId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetCustomerIdByAccountIdAsync(string AccountId, int FPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerIdByTCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetCustomerIdByTCodeAsync(string TCode, int FPId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerIdByNationalCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetCustomerIdByNationalCodeAsync(string NationalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerIdByCellPhone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetCustomerIdByCellPhoneAsync(string CellPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.Customer> GetCustomerInfoAsync(int customerId, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.CustomerType[]> GetCustomerTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerCreditInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.CustomerCredit> GetCustomerCreditInfoAsync(int customerId, System.DateTime date, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateFactor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CreateFactorAsync(
                    System.DateTime date, 
                    int customerId, 
                    string account, 
                    string floatingAccount1, 
                    string floatingAccount2, 
                    string floatingAccount3, 
                    string description, 
                    string customString1, 
                    int SC, 
                    int BrokerId, 
                    decimal Discount, 
                    string userName, 
                    string password, 
                    int factorType, 
                    string referenceNo, 
                    System.DateTime payRcvDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddArticle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task AddArticleAsync(int factorId, int merchandiseId, int amount, int unitId, decimal unitPrice, int auxAmount, decimal vTax, decimal discount, int stockRoomId, string description, string ACC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddArticleByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task AddArticleByCodeAsync(int factorId, string merchandiseCode, int amount, int unitId, decimal unitPrice, int auxAmount, decimal vTax, decimal discount, int stockRoomId, string description, string ACC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddArticleByBarCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task AddArticleByBarCodeAsync(int factorId, string merchandiseBarCode, int amount, int unitId, decimal unitPrice, int auxAmount, decimal vTax, decimal discount, int stockRoomId, string description, string ACC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddArticleByTechNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task AddArticleByTechNumAsync(int factorId, string merchandiseTechNum, int amount, int unitId, decimal unitPrice, int auxAmount, decimal vTax, decimal discount, int stockRoomId, string description, string ACC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddCost", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task AddCostAsync(int factorId, decimal amount, bool isIncremental, string description, int EKTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CommitFactor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.AddMethodsResult> CommitFactorAsync(int factorId, int fiscalPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CommitFactorWithAutoReceiptOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.AddMethodsResultExtended> CommitFactorWithAutoReceiptOrderAsync(int factorId, int fiscalPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateReceiptOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CreateReceiptOrderAsync(int type, System.DateTime date, int reference, int stockRoom, string description, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5, int customerId, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddReceiptOrderArticle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> AddReceiptOrderArticleAsync(int receiptOrderId, int merchandiseId, int amount, int unitId, int unitPrice, int auxAmount, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddReceiptOrderSerial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task AddReceiptOrderSerialAsync(int receiptOrderId, int receiptOrderArticleId, string serial, System.DateTime expiryDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CommitReceiptOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.AddMethodsResult> CommitReceiptOrderAsync(int receiptOrderId, int fiscalPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddMerchandise", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> AddMerchandiseAsync(string parentCode, string name, string technicalNumber, int unitId, int fiscalPeriod, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddMerchandiseReturnsCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddMerchandiseReturnsCodeAsync(string parentCode, string name, string technicalNumber, int unitId, int fiscalPeriod, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMerchandiseRemainForAllStockRooms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<double> GetMerchandiseRemainForAllStockRoomsAsync(string merchandiseCode, System.DateTime date, int fiscalPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMerchandiseRemain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<double> GetMerchandiseRemainAsync(string merchandiseCode, System.DateTime date, int fiscalPeriod, int stockRoomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMerchandiseLastBuyRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<double> GetMerchandiseLastBuyRateAsync(string merchandiseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMerchandiseIdByTechNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<double> GetMerchandiseIdByTechNumAsync(string techNum, int fiscalPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddMerchandiseUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> AddMerchandiseUnitAsync(string name, int fiscalPeriod, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMerchandiseList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.Merchandise[]> GetMerchandiseListAsync(int fiscalPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMerchandisePriceList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.MerchandisePrice[]> GetMerchandisePriceListAsync(int operationType, int fiscalPeriod, System.DateTime date, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStockList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.Stock[]> GetStockListAsync(int fiscalPeriod, System.DateTime date, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccountingTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CreateAccountingTransactionAsync(System.DateTime date, string description, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddAccountingArticle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task AddAccountingArticleAsync(int transactionId, double debit, double credit, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CommitAccountingTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.AddMethodsResult> CommitAccountingTransactionAsync(int transactionId, int fiscalPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<double> GetAccountBalanceAsync(int fiscalPeriod, int departmentCode, System.DateTime date, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.AccountTransaction[]> GetAccountTransactionsAsync(int fiscalPeriod, System.DateTime startDate, System.DateTime endDate, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.AddMethodsResultWithCode> AddAccountAsync(string parentCode, int fiscalPeriod, string name, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddFloatingAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.AddMethodsResultWithCode> AddFloatingAccountAsync(string parentCode, int fiscalPeriod, string name, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddFloatingAccountWithSpecifiedCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.AddMethodsResultWithCode> AddFloatingAccountWithSpecifiedCodeAsync(string parentCode, string code, int fiscalPeriod, string name, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFiscalPeriodId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.GetFiscalPeriodIdResponse> GetFiscalPeriodIdAsync(ApiPaivast.GetFiscalPeriodIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePayRCVforPay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CreatePayRCVforPayAsync(
                    int PayType, 
                    System.DateTime PDate, 
                    string RcvrAcc, 
                    int RcvrFAccId, 
                    int RcvrCCId, 
                    int RcvrPrjId, 
                    int RcvrAB3, 
                    int RcvrAB4, 
                    string PDesc, 
                    int RefNo, 
                    int FPId, 
                    int Cash, 
                    int CustomerId, 
                    decimal PCValue, 
                    string userName, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePayRCVforReceive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CreatePayRCVforReceiveAsync(
                    int PayType, 
                    System.DateTime PDate, 
                    string RcvrAcc, 
                    int RcvrFAccId, 
                    int RcvrCCId, 
                    int RcvrPrjId, 
                    int RcvrAB3, 
                    int RcvrAB4, 
                    string PDesc, 
                    int RefNo, 
                    int FPId, 
                    int Cash, 
                    int CustomerId, 
                    decimal PCValue, 
                    string userName, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePayRCVforCurrencyPurchase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CreatePayRCVforCurrencyPurchaseAsync(
                    int PayType, 
                    System.DateTime PDate, 
                    string RcvrAcc, 
                    int RcvrFAccId, 
                    int RcvrCCId, 
                    int RcvrPrjId, 
                    int RcvrAB3, 
                    int RcvrAB4, 
                    string PDesc, 
                    int RefNo, 
                    int FPId, 
                    int Cash, 
                    int CustomerId, 
                    decimal PCValue, 
                    string userName, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePayRCVforCurrencySales", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CreatePayRCVforCurrencySalesAsync(
                    int PayType, 
                    System.DateTime PDate, 
                    string RcvrAcc, 
                    int RcvrFAccId, 
                    int RcvrCCId, 
                    int RcvrPrjId, 
                    int RcvrAB3, 
                    int RcvrAB4, 
                    string PDesc, 
                    int RefNo, 
                    int FPId, 
                    int Cash, 
                    int CustomerId, 
                    decimal PCValue, 
                    string userName, 
                    string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task AddCheckAsync(int PayRCVId, string CheckNo, decimal CValue, string RcvrAcc, int RcvrFAccId, int RcvrCCId, int RcvrPrjId, int RcvrAB3, int RcvrAB4, System.DateTime CDate, System.DateTime RcptDate, int SType, string CDesc, decimal CurrencyVal, int CurrencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CommitPayRCV", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ApiPaivast.AddMethodsResult> CommitPayRCVAsync(int PayRCVId, int FiscalPeriod);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Customer
    {
        
        private int idField;
        
        private string nameField;
        
        private string nationalCodeField;
        
        private string fatherName_CEOField;
        
        private string accountIdField;
        
        private string floatingAccount1Field;
        
        private string floatingAccount2Field;
        
        private string floatingAccount3Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string NationalCode
        {
            get
            {
                return this.nationalCodeField;
            }
            set
            {
                this.nationalCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string FatherName_CEO
        {
            get
            {
                return this.fatherName_CEOField;
            }
            set
            {
                this.fatherName_CEOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string AccountId
        {
            get
            {
                return this.accountIdField;
            }
            set
            {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string FloatingAccount1
        {
            get
            {
                return this.floatingAccount1Field;
            }
            set
            {
                this.floatingAccount1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string FloatingAccount2
        {
            get
            {
                return this.floatingAccount2Field;
            }
            set
            {
                this.floatingAccount2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string FloatingAccount3
        {
            get
            {
                return this.floatingAccount3Field;
            }
            set
            {
                this.floatingAccount3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AddMethodsResultWithCode
    {
        
        private int idField;
        
        private string codeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AccountTransaction
    {
        
        private string accountIdField;
        
        private string accountNameField;
        
        private int transactionNumberField;
        
        private System.DateTime transactionDateField;
        
        private string articleDescrioptionField;
        
        private double debitField;
        
        private double creditField;
        
        private int codeOrgField;
        
        private string nameOrgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AccountId
        {
            get
            {
                return this.accountIdField;
            }
            set
            {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string AccountName
        {
            get
            {
                return this.accountNameField;
            }
            set
            {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int TransactionNumber
        {
            get
            {
                return this.transactionNumberField;
            }
            set
            {
                this.transactionNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime TransactionDate
        {
            get
            {
                return this.transactionDateField;
            }
            set
            {
                this.transactionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ArticleDescrioption
        {
            get
            {
                return this.articleDescrioptionField;
            }
            set
            {
                this.articleDescrioptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double Debit
        {
            get
            {
                return this.debitField;
            }
            set
            {
                this.debitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Credit
        {
            get
            {
                return this.creditField;
            }
            set
            {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int CodeOrg
        {
            get
            {
                return this.codeOrgField;
            }
            set
            {
                this.codeOrgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string NameOrg
        {
            get
            {
                return this.nameOrgField;
            }
            set
            {
                this.nameOrgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Stock
    {
        
        private int merchandiseIdField;
        
        private string codeField;
        
        private string nameField;
        
        private string technicalCodeField;
        
        private string barcodeField;
        
        private int stockRoomIdField;
        
        private double amountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int MerchandiseId
        {
            get
            {
                return this.merchandiseIdField;
            }
            set
            {
                this.merchandiseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TechnicalCode
        {
            get
            {
                return this.technicalCodeField;
            }
            set
            {
                this.technicalCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Barcode
        {
            get
            {
                return this.barcodeField;
            }
            set
            {
                this.barcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int StockRoomId
        {
            get
            {
                return this.stockRoomIdField;
            }
            set
            {
                this.stockRoomIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Amount
        {
            get
            {
                return this.amountField;
            }
            set
            {
                this.amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MerchandisePrice
    {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private string technicalCodeField;
        
        private string barcodeField;
        
        private double price_1Field;
        
        private double price_2Field;
        
        private double price_3Field;
        
        private double price_4Field;
        
        private double price_5Field;
        
        private double price_6Field;
        
        private double price_7Field;
        
        private double price_8Field;
        
        private double price_9Field;
        
        private double price_10Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TechnicalCode
        {
            get
            {
                return this.technicalCodeField;
            }
            set
            {
                this.technicalCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Barcode
        {
            get
            {
                return this.barcodeField;
            }
            set
            {
                this.barcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double Price_1
        {
            get
            {
                return this.price_1Field;
            }
            set
            {
                this.price_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Price_2
        {
            get
            {
                return this.price_2Field;
            }
            set
            {
                this.price_2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double Price_3
        {
            get
            {
                return this.price_3Field;
            }
            set
            {
                this.price_3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public double Price_4
        {
            get
            {
                return this.price_4Field;
            }
            set
            {
                this.price_4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public double Price_5
        {
            get
            {
                return this.price_5Field;
            }
            set
            {
                this.price_5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public double Price_6
        {
            get
            {
                return this.price_6Field;
            }
            set
            {
                this.price_6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public double Price_7
        {
            get
            {
                return this.price_7Field;
            }
            set
            {
                this.price_7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public double Price_8
        {
            get
            {
                return this.price_8Field;
            }
            set
            {
                this.price_8Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public double Price_9
        {
            get
            {
                return this.price_9Field;
            }
            set
            {
                this.price_9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public double Price_10
        {
            get
            {
                return this.price_10Field;
            }
            set
            {
                this.price_10Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Merchandise
    {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private string englishNameField;
        
        private string technicalCodeField;
        
        private string barcodeField;
        
        private string iranCodeField;
        
        private int unitIdField;
        
        private string unitField;
        
        private int fiscalPeriodField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string EnglishName
        {
            get
            {
                return this.englishNameField;
            }
            set
            {
                this.englishNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TechnicalCode
        {
            get
            {
                return this.technicalCodeField;
            }
            set
            {
                this.technicalCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Barcode
        {
            get
            {
                return this.barcodeField;
            }
            set
            {
                this.barcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string IranCode
        {
            get
            {
                return this.iranCodeField;
            }
            set
            {
                this.iranCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int UnitId
        {
            get
            {
                return this.unitIdField;
            }
            set
            {
                this.unitIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Unit
        {
            get
            {
                return this.unitField;
            }
            set
            {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int FiscalPeriod
        {
            get
            {
                return this.fiscalPeriodField;
            }
            set
            {
                this.fiscalPeriodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AddMethodsResultExtended
    {
        
        private int factor_IdField;
        
        private int factor_NumberField;
        
        private int receiptOrder_IdField;
        
        private int receiptOrder_NumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Factor_Id
        {
            get
            {
                return this.factor_IdField;
            }
            set
            {
                this.factor_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Factor_Number
        {
            get
            {
                return this.factor_NumberField;
            }
            set
            {
                this.factor_NumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ReceiptOrder_Id
        {
            get
            {
                return this.receiptOrder_IdField;
            }
            set
            {
                this.receiptOrder_IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int ReceiptOrder_Number
        {
            get
            {
                return this.receiptOrder_NumberField;
            }
            set
            {
                this.receiptOrder_NumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AddMethodsResult
    {
        
        private int idField;
        
        private int numberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerCredit
    {
        
        private double creditField;
        
        private double accountBalanceField;
        
        private double notesReceivableField;
        
        private double bouncedChecksBalanceField;
        
        private double creditBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public double Credit
        {
            get
            {
                return this.creditField;
            }
            set
            {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double AccountBalance
        {
            get
            {
                return this.accountBalanceField;
            }
            set
            {
                this.accountBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double NotesReceivable
        {
            get
            {
                return this.notesReceivableField;
            }
            set
            {
                this.notesReceivableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double BouncedChecksBalance
        {
            get
            {
                return this.bouncedChecksBalanceField;
            }
            set
            {
                this.bouncedChecksBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double CreditBalance
        {
            get
            {
                return this.creditBalanceField;
            }
            set
            {
                this.creditBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerType
    {
        
        private int codeField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFiscalPeriodId", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetFiscalPeriodIdRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> date;
        
        public GetFiscalPeriodIdRequest()
        {
        }
        
        public GetFiscalPeriodIdRequest(System.Nullable<System.DateTime> date)
        {
            this.date = date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFiscalPeriodIdResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class GetFiscalPeriodIdResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> GetFiscalPeriodIdResult;
        
        public GetFiscalPeriodIdResponse()
        {
        }
        
        public GetFiscalPeriodIdResponse(System.Nullable<int> GetFiscalPeriodIdResult)
        {
            this.GetFiscalPeriodIdResult = GetFiscalPeriodIdResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal interface AccountingServiceSoapChannel : ApiPaivast.AccountingServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal partial class AccountingServiceSoapClient : System.ServiceModel.ClientBase<ApiPaivast.AccountingServiceSoap>, ApiPaivast.AccountingServiceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AccountingServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(AccountingServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), AccountingServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AccountingServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AccountingServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AccountingServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AccountingServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AccountingServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<int> AddLegalCustomerAsync(
                    int fiscalPeriod, 
                    string name, 
                    string title, 
                    string nationalIdentiry, 
                    string phone, 
                    string fax, 
                    string cellPhone, 
                    string management, 
                    string registerationNumber, 
                    int registrationLocation, 
                    System.DateTime registrationDate, 
                    string subscriptionCode, 
                    string zipCode, 
                    string econumicCode, 
                    double credit, 
                    string email, 
                    string address, 
                    string description, 
                    string parentAccountId, 
                    string parentFloatingAccountId, 
                    int type, 
                    string floatingAccountId2, 
                    string floatingAccountId3, 
                    string floatingAccountId4, 
                    string floatingAccountId5, 
                    string userName, 
                    string password)
        {
            return base.Channel.AddLegalCustomerAsync(fiscalPeriod, name, title, nationalIdentiry, phone, fax, cellPhone, management, registerationNumber, registrationLocation, registrationDate, subscriptionCode, zipCode, econumicCode, credit, email, address, description, parentAccountId, parentFloatingAccountId, type, floatingAccountId2, floatingAccountId3, floatingAccountId4, floatingAccountId5, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> AddRealCustomerAsync(
                    int fiscalPeriod, 
                    string firstName, 
                    string lastName, 
                    string title, 
                    string nationalCode, 
                    string phone, 
                    string fax, 
                    string cellPhone, 
                    string fatherName, 
                    string registerationNumber, 
                    int registrationLocation, 
                    System.DateTime registrationDate, 
                    string subscriptionCode, 
                    string zipCode, 
                    string econumicCode, 
                    double credit, 
                    string email, 
                    string address, 
                    string description, 
                    string parentAccountId, 
                    string parentFloatingAccountId, 
                    int type, 
                    string floatingAccountId2, 
                    string floatingAccountId3, 
                    string floatingAccountId4, 
                    string floatingAccountId5, 
                    string userName, 
                    string password)
        {
            return base.Channel.AddRealCustomerAsync(fiscalPeriod, firstName, lastName, title, nationalCode, phone, fax, cellPhone, fatherName, registerationNumber, registrationLocation, registrationDate, subscriptionCode, zipCode, econumicCode, credit, email, address, description, parentAccountId, parentFloatingAccountId, type, floatingAccountId2, floatingAccountId3, floatingAccountId4, floatingAccountId5, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> AddLegalCustomerWithSpecificFloatingAccountCodeAsync(
                    int fiscalPeriod, 
                    string name, 
                    string title, 
                    string nationalIdentiry, 
                    string phone, 
                    string fax, 
                    string cellPhone, 
                    string management, 
                    string registerationNumber, 
                    int registrationLocation, 
                    System.DateTime registrationDate, 
                    string subscriptionCode, 
                    string zipCode, 
                    string econumicCode, 
                    double credit, 
                    string email, 
                    string address, 
                    string description, 
                    string parentAccountId, 
                    string parentFloatingAccountCode, 
                    string floatingAccountCode, 
                    int type, 
                    string floatingAccountId2, 
                    string floatingAccountId3, 
                    string floatingAccountId4, 
                    string floatingAccountId5, 
                    string userName, 
                    string password)
        {
            return base.Channel.AddLegalCustomerWithSpecificFloatingAccountCodeAsync(fiscalPeriod, name, title, nationalIdentiry, phone, fax, cellPhone, management, registerationNumber, registrationLocation, registrationDate, subscriptionCode, zipCode, econumicCode, credit, email, address, description, parentAccountId, parentFloatingAccountCode, floatingAccountCode, type, floatingAccountId2, floatingAccountId3, floatingAccountId4, floatingAccountId5, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> AddRealCustomerWithSpecificFloatingAccountCodeAsync(
                    int fiscalPeriod, 
                    string firstName, 
                    string lastName, 
                    string title, 
                    string nationalCode, 
                    string phone, 
                    string fax, 
                    string cellPhone, 
                    string fatherName, 
                    string registerationNumber, 
                    int registrationLocation, 
                    System.DateTime registrationDate, 
                    string subscriptionCode, 
                    string zipCode, 
                    string econumicCode, 
                    double credit, 
                    string email, 
                    string address, 
                    string description, 
                    string parentAccountId, 
                    string parentFloatingAccountCode, 
                    string floatingAccountCode, 
                    int type, 
                    string floatingAccountId2, 
                    string floatingAccountId3, 
                    string floatingAccountId4, 
                    string floatingAccountId5, 
                    string userName, 
                    string password)
        {
            return base.Channel.AddRealCustomerWithSpecificFloatingAccountCodeAsync(fiscalPeriod, firstName, lastName, title, nationalCode, phone, fax, cellPhone, fatherName, registerationNumber, registrationLocation, registrationDate, subscriptionCode, zipCode, econumicCode, credit, email, address, description, parentAccountId, parentFloatingAccountCode, floatingAccountCode, type, floatingAccountId2, floatingAccountId3, floatingAccountId4, floatingAccountId5, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> GetCustomerIdByAccountIdAsync(string AccountId, int FPId)
        {
            return base.Channel.GetCustomerIdByAccountIdAsync(AccountId, FPId);
        }
        
        public System.Threading.Tasks.Task<int> GetCustomerIdByTCodeAsync(string TCode, int FPId)
        {
            return base.Channel.GetCustomerIdByTCodeAsync(TCode, FPId);
        }
        
        public System.Threading.Tasks.Task<int> GetCustomerIdByNationalCodeAsync(string NationalCode)
        {
            return base.Channel.GetCustomerIdByNationalCodeAsync(NationalCode);
        }
        
        public System.Threading.Tasks.Task<int> GetCustomerIdByCellPhoneAsync(string CellPhone)
        {
            return base.Channel.GetCustomerIdByCellPhoneAsync(CellPhone);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.Customer> GetCustomerInfoAsync(int customerId, string userName, string password)
        {
            return base.Channel.GetCustomerInfoAsync(customerId, userName, password);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.CustomerType[]> GetCustomerTypesAsync()
        {
            return base.Channel.GetCustomerTypesAsync();
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.CustomerCredit> GetCustomerCreditInfoAsync(int customerId, System.DateTime date, string userName, string password)
        {
            return base.Channel.GetCustomerCreditInfoAsync(customerId, date, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> CreateFactorAsync(
                    System.DateTime date, 
                    int customerId, 
                    string account, 
                    string floatingAccount1, 
                    string floatingAccount2, 
                    string floatingAccount3, 
                    string description, 
                    string customString1, 
                    int SC, 
                    int BrokerId, 
                    decimal Discount, 
                    string userName, 
                    string password, 
                    int factorType, 
                    string referenceNo, 
                    System.DateTime payRcvDate)
        {
            return base.Channel.CreateFactorAsync(date, customerId, account, floatingAccount1, floatingAccount2, floatingAccount3, description, customString1, SC, BrokerId, Discount, userName, password, factorType, referenceNo, payRcvDate);
        }
        
        public System.Threading.Tasks.Task AddArticleAsync(int factorId, int merchandiseId, int amount, int unitId, decimal unitPrice, int auxAmount, decimal vTax, decimal discount, int stockRoomId, string description, string ACC)
        {
            return base.Channel.AddArticleAsync(factorId, merchandiseId, amount, unitId, unitPrice, auxAmount, vTax, discount, stockRoomId, description, ACC);
        }
        
        public System.Threading.Tasks.Task AddArticleByCodeAsync(int factorId, string merchandiseCode, int amount, int unitId, decimal unitPrice, int auxAmount, decimal vTax, decimal discount, int stockRoomId, string description, string ACC)
        {
            return base.Channel.AddArticleByCodeAsync(factorId, merchandiseCode, amount, unitId, unitPrice, auxAmount, vTax, discount, stockRoomId, description, ACC);
        }
        
        public System.Threading.Tasks.Task AddArticleByBarCodeAsync(int factorId, string merchandiseBarCode, int amount, int unitId, decimal unitPrice, int auxAmount, decimal vTax, decimal discount, int stockRoomId, string description, string ACC)
        {
            return base.Channel.AddArticleByBarCodeAsync(factorId, merchandiseBarCode, amount, unitId, unitPrice, auxAmount, vTax, discount, stockRoomId, description, ACC);
        }
        
        public System.Threading.Tasks.Task AddArticleByTechNumAsync(int factorId, string merchandiseTechNum, int amount, int unitId, decimal unitPrice, int auxAmount, decimal vTax, decimal discount, int stockRoomId, string description, string ACC)
        {
            return base.Channel.AddArticleByTechNumAsync(factorId, merchandiseTechNum, amount, unitId, unitPrice, auxAmount, vTax, discount, stockRoomId, description, ACC);
        }
        
        public System.Threading.Tasks.Task AddCostAsync(int factorId, decimal amount, bool isIncremental, string description, int EKTypeCode)
        {
            return base.Channel.AddCostAsync(factorId, amount, isIncremental, description, EKTypeCode);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.AddMethodsResult> CommitFactorAsync(int factorId, int fiscalPeriod)
        {
            return base.Channel.CommitFactorAsync(factorId, fiscalPeriod);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.AddMethodsResultExtended> CommitFactorWithAutoReceiptOrderAsync(int factorId, int fiscalPeriod)
        {
            return base.Channel.CommitFactorWithAutoReceiptOrderAsync(factorId, fiscalPeriod);
        }
        
        public System.Threading.Tasks.Task<int> CreateReceiptOrderAsync(int type, System.DateTime date, int reference, int stockRoom, string description, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5, int customerId, string userName, string password)
        {
            return base.Channel.CreateReceiptOrderAsync(type, date, reference, stockRoom, description, account, floatingAccount1, floatingAccount2, floatingAccount3, floatingAccount4, floatingAccount5, customerId, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> AddReceiptOrderArticleAsync(int receiptOrderId, int merchandiseId, int amount, int unitId, int unitPrice, int auxAmount, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5, string description)
        {
            return base.Channel.AddReceiptOrderArticleAsync(receiptOrderId, merchandiseId, amount, unitId, unitPrice, auxAmount, account, floatingAccount1, floatingAccount2, floatingAccount3, floatingAccount4, floatingAccount5, description);
        }
        
        public System.Threading.Tasks.Task AddReceiptOrderSerialAsync(int receiptOrderId, int receiptOrderArticleId, string serial, System.DateTime expiryDate)
        {
            return base.Channel.AddReceiptOrderSerialAsync(receiptOrderId, receiptOrderArticleId, serial, expiryDate);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.AddMethodsResult> CommitReceiptOrderAsync(int receiptOrderId, int fiscalPeriod)
        {
            return base.Channel.CommitReceiptOrderAsync(receiptOrderId, fiscalPeriod);
        }
        
        public System.Threading.Tasks.Task<int> AddMerchandiseAsync(string parentCode, string name, string technicalNumber, int unitId, int fiscalPeriod, string userName, string password)
        {
            return base.Channel.AddMerchandiseAsync(parentCode, name, technicalNumber, unitId, fiscalPeriod, userName, password);
        }
        
        public System.Threading.Tasks.Task<string> AddMerchandiseReturnsCodeAsync(string parentCode, string name, string technicalNumber, int unitId, int fiscalPeriod, string userName, string password)
        {
            return base.Channel.AddMerchandiseReturnsCodeAsync(parentCode, name, technicalNumber, unitId, fiscalPeriod, userName, password);
        }
        
        public System.Threading.Tasks.Task<double> GetMerchandiseRemainForAllStockRoomsAsync(string merchandiseCode, System.DateTime date, int fiscalPeriod)
        {
            return base.Channel.GetMerchandiseRemainForAllStockRoomsAsync(merchandiseCode, date, fiscalPeriod);
        }
        
        public System.Threading.Tasks.Task<double> GetMerchandiseRemainAsync(string merchandiseCode, System.DateTime date, int fiscalPeriod, int stockRoomId)
        {
            return base.Channel.GetMerchandiseRemainAsync(merchandiseCode, date, fiscalPeriod, stockRoomId);
        }
        
        public System.Threading.Tasks.Task<double> GetMerchandiseLastBuyRateAsync(string merchandiseCode)
        {
            return base.Channel.GetMerchandiseLastBuyRateAsync(merchandiseCode);
        }
        
        public System.Threading.Tasks.Task<double> GetMerchandiseIdByTechNumAsync(string techNum, int fiscalPeriod)
        {
            return base.Channel.GetMerchandiseIdByTechNumAsync(techNum, fiscalPeriod);
        }
        
        public System.Threading.Tasks.Task<int> AddMerchandiseUnitAsync(string name, int fiscalPeriod, string userName, string password)
        {
            return base.Channel.AddMerchandiseUnitAsync(name, fiscalPeriod, userName, password);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.Merchandise[]> GetMerchandiseListAsync(int fiscalPeriod)
        {
            return base.Channel.GetMerchandiseListAsync(fiscalPeriod);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.MerchandisePrice[]> GetMerchandisePriceListAsync(int operationType, int fiscalPeriod, System.DateTime date, string userName, string password)
        {
            return base.Channel.GetMerchandisePriceListAsync(operationType, fiscalPeriod, date, userName, password);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.Stock[]> GetStockListAsync(int fiscalPeriod, System.DateTime date, string userName, string password)
        {
            return base.Channel.GetStockListAsync(fiscalPeriod, date, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> CreateAccountingTransactionAsync(System.DateTime date, string description, string userName, string password)
        {
            return base.Channel.CreateAccountingTransactionAsync(date, description, userName, password);
        }
        
        public System.Threading.Tasks.Task AddAccountingArticleAsync(int transactionId, double debit, double credit, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5, string description)
        {
            return base.Channel.AddAccountingArticleAsync(transactionId, debit, credit, account, floatingAccount1, floatingAccount2, floatingAccount3, floatingAccount4, floatingAccount5, description);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.AddMethodsResult> CommitAccountingTransactionAsync(int transactionId, int fiscalPeriod)
        {
            return base.Channel.CommitAccountingTransactionAsync(transactionId, fiscalPeriod);
        }
        
        public System.Threading.Tasks.Task<double> GetAccountBalanceAsync(int fiscalPeriod, int departmentCode, System.DateTime date, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5)
        {
            return base.Channel.GetAccountBalanceAsync(fiscalPeriod, departmentCode, date, account, floatingAccount1, floatingAccount2, floatingAccount3, floatingAccount4, floatingAccount5);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.AccountTransaction[]> GetAccountTransactionsAsync(int fiscalPeriod, System.DateTime startDate, System.DateTime endDate, string account, string floatingAccount1, string floatingAccount2, string floatingAccount3, string floatingAccount4, string floatingAccount5)
        {
            return base.Channel.GetAccountTransactionsAsync(fiscalPeriod, startDate, endDate, account, floatingAccount1, floatingAccount2, floatingAccount3, floatingAccount4, floatingAccount5);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.AddMethodsResultWithCode> AddAccountAsync(string parentCode, int fiscalPeriod, string name, string userName, string password)
        {
            return base.Channel.AddAccountAsync(parentCode, fiscalPeriod, name, userName, password);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.AddMethodsResultWithCode> AddFloatingAccountAsync(string parentCode, int fiscalPeriod, string name, string userName, string password)
        {
            return base.Channel.AddFloatingAccountAsync(parentCode, fiscalPeriod, name, userName, password);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.AddMethodsResultWithCode> AddFloatingAccountWithSpecifiedCodeAsync(string parentCode, string code, int fiscalPeriod, string name, string userName, string password)
        {
            return base.Channel.AddFloatingAccountWithSpecifiedCodeAsync(parentCode, code, fiscalPeriod, name, userName, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ApiPaivast.GetFiscalPeriodIdResponse> ApiPaivast.AccountingServiceSoap.GetFiscalPeriodIdAsync(ApiPaivast.GetFiscalPeriodIdRequest request)
        {
            return base.Channel.GetFiscalPeriodIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.GetFiscalPeriodIdResponse> GetFiscalPeriodIdAsync(System.Nullable<System.DateTime> date)
        {
            ApiPaivast.GetFiscalPeriodIdRequest inValue = new ApiPaivast.GetFiscalPeriodIdRequest();
            inValue.date = date;
            return ((ApiPaivast.AccountingServiceSoap)(this)).GetFiscalPeriodIdAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<int> CreatePayRCVforPayAsync(
                    int PayType, 
                    System.DateTime PDate, 
                    string RcvrAcc, 
                    int RcvrFAccId, 
                    int RcvrCCId, 
                    int RcvrPrjId, 
                    int RcvrAB3, 
                    int RcvrAB4, 
                    string PDesc, 
                    int RefNo, 
                    int FPId, 
                    int Cash, 
                    int CustomerId, 
                    decimal PCValue, 
                    string userName, 
                    string password)
        {
            return base.Channel.CreatePayRCVforPayAsync(PayType, PDate, RcvrAcc, RcvrFAccId, RcvrCCId, RcvrPrjId, RcvrAB3, RcvrAB4, PDesc, RefNo, FPId, Cash, CustomerId, PCValue, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> CreatePayRCVforReceiveAsync(
                    int PayType, 
                    System.DateTime PDate, 
                    string RcvrAcc, 
                    int RcvrFAccId, 
                    int RcvrCCId, 
                    int RcvrPrjId, 
                    int RcvrAB3, 
                    int RcvrAB4, 
                    string PDesc, 
                    int RefNo, 
                    int FPId, 
                    int Cash, 
                    int CustomerId, 
                    decimal PCValue, 
                    string userName, 
                    string password)
        {
            return base.Channel.CreatePayRCVforReceiveAsync(PayType, PDate, RcvrAcc, RcvrFAccId, RcvrCCId, RcvrPrjId, RcvrAB3, RcvrAB4, PDesc, RefNo, FPId, Cash, CustomerId, PCValue, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> CreatePayRCVforCurrencyPurchaseAsync(
                    int PayType, 
                    System.DateTime PDate, 
                    string RcvrAcc, 
                    int RcvrFAccId, 
                    int RcvrCCId, 
                    int RcvrPrjId, 
                    int RcvrAB3, 
                    int RcvrAB4, 
                    string PDesc, 
                    int RefNo, 
                    int FPId, 
                    int Cash, 
                    int CustomerId, 
                    decimal PCValue, 
                    string userName, 
                    string password)
        {
            return base.Channel.CreatePayRCVforCurrencyPurchaseAsync(PayType, PDate, RcvrAcc, RcvrFAccId, RcvrCCId, RcvrPrjId, RcvrAB3, RcvrAB4, PDesc, RefNo, FPId, Cash, CustomerId, PCValue, userName, password);
        }
        
        public System.Threading.Tasks.Task<int> CreatePayRCVforCurrencySalesAsync(
                    int PayType, 
                    System.DateTime PDate, 
                    string RcvrAcc, 
                    int RcvrFAccId, 
                    int RcvrCCId, 
                    int RcvrPrjId, 
                    int RcvrAB3, 
                    int RcvrAB4, 
                    string PDesc, 
                    int RefNo, 
                    int FPId, 
                    int Cash, 
                    int CustomerId, 
                    decimal PCValue, 
                    string userName, 
                    string password)
        {
            return base.Channel.CreatePayRCVforCurrencySalesAsync(PayType, PDate, RcvrAcc, RcvrFAccId, RcvrCCId, RcvrPrjId, RcvrAB3, RcvrAB4, PDesc, RefNo, FPId, Cash, CustomerId, PCValue, userName, password);
        }
        
        public System.Threading.Tasks.Task AddCheckAsync(int PayRCVId, string CheckNo, decimal CValue, string RcvrAcc, int RcvrFAccId, int RcvrCCId, int RcvrPrjId, int RcvrAB3, int RcvrAB4, System.DateTime CDate, System.DateTime RcptDate, int SType, string CDesc, decimal CurrencyVal, int CurrencyId)
        {
            return base.Channel.AddCheckAsync(PayRCVId, CheckNo, CValue, RcvrAcc, RcvrFAccId, RcvrCCId, RcvrPrjId, RcvrAB3, RcvrAB4, CDate, RcptDate, SType, CDesc, CurrencyVal, CurrencyId);
        }
        
        public System.Threading.Tasks.Task<ApiPaivast.AddMethodsResult> CommitPayRCVAsync(int PayRCVId, int FiscalPeriod)
        {
            return base.Channel.CommitPayRCVAsync(PayRCVId, FiscalPeriod);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AccountingServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.AccountingServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AccountingServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://172.16.1.254:81/AccountingService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.AccountingServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://172.16.1.254:81/AccountingService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            AccountingServiceSoap,
            
            AccountingServiceSoap12,
        }
    }
}
